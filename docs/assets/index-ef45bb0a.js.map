{"version":3,"file":"index-ef45bb0a.js","sources":["../../src/Indicator/IndicatorItem.tsx","../../src/Indicator/Indicator.tsx"],"sourcesContent":["import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\n\nexport type IndicatorItemProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps & {\n    horizontal?: 'start' | 'center' | 'end'\n    vertical?: 'top' | 'middle' | 'bottom'\n  }\nconst classesFn = ({\n  className,\n  horizontal,\n  vertical,\n}: Pick<IndicatorItemProps, 'className' | 'horizontal' | 'vertical'> = {}) =>\n  twMerge(\n    'indicator-item',\n    className,\n    clsx({\n      'indicator-start': horizontal === 'start',\n      'indicator-center': horizontal === 'center',\n      'indicator-end': horizontal === 'end',\n      'indicator-top': vertical === 'top',\n      'indicator-middle': vertical === 'middle',\n      'indicator-bottom': vertical === 'bottom',\n    })\n  )\n\nconst IndicatorItem = React.forwardRef<HTMLDivElement, IndicatorItemProps>(\n  (\n    {\n      children,\n      horizontal = 'end',\n      vertical = 'top',\n      dataTheme,\n      className,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    return (\n      <div\n        aria-label=\"Indicator\"\n        {...props}\n        className={classesFn({ className, horizontal, vertical })}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  }\n)\nIndicatorItem.displayName = 'IndicatorItem'\n\nexport default Object.assign(IndicatorItem, { className: classesFn })\n","import React from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { IComponentBaseProps } from '../types'\nimport IndicatorItem, { IndicatorItemProps as ItemProps } from './IndicatorItem'\n\nexport type IndicatorItemProps = ItemProps\nexport type IndicatorProps = React.HTMLAttributes<HTMLDivElement> &\n  IComponentBaseProps\n\nconst classesFn = ({ className }: Pick<IndicatorProps, 'className'> = {}) =>\n  twMerge('indicator', className)\nconst Indicator = React.forwardRef<HTMLDivElement, IndicatorProps>(\n  ({ children, className, dataTheme, ...props }, ref): JSX.Element => {\n    return (\n      <div\n        {...props}\n        data-theme={dataTheme}\n        className={classesFn({ className })}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nIndicator.displayName = 'Indicator'\nexport default Object.assign(Indicator, {\n  Item: IndicatorItem,\n  className: classesFn,\n})\n"],"names":["classesFn","className","horizontal","vertical","twMerge","clsx","IndicatorItem","React","children","dataTheme","props","ref","jsx","IndicatorItem$1","Indicator","Indicator$1"],"mappings":"mIAWA,MAAAA,EAAA,CAAA,CAAmB,UAAAC,EACjB,WAAAC,EACA,SAAAC,CAEF,EAAA,CAAA,IAAAC,EACE,iBACEH,EACAI,EAAA,CACK,kBAAAH,IAAA,QAC+B,mBAAAA,IAAA,SACC,gBAAAA,IAAA,MACH,gBAAAC,IAAA,MACF,mBAAAA,IAAA,SACG,mBAAAA,IAAA,QACA,CAAA,CAErC,EAEFG,EAAAC,EAAA,WAA4B,CAAA,CAExB,SAAAC,EACE,WAAAN,EAAA,MACa,SAAAC,EAAA,MACF,UAAAM,EACX,UAAAR,EACA,GAAAS,CACG,EAAAC,IAILC,EACE,MAAC,CAAA,aAAA,YACY,GAAAF,EACP,UAAAV,EAAA,CAAA,UAAAC,EAAA,WAAAC,EAAA,SAAAC,CAAA,CAAA,EACoD,IAAAQ,EACxD,SAAAH,CAEC,CAAA,CAIT,EACAF,EAAA,YAAA,gBAEA,MAAAO,EAAA,OAAA,OAAAP,EAAA,CAAA,UAAAN,CAAA,CAAA,qhBC7CA,MAAAA,EAAA,CAAA,CAAA,UAAAC,CAAA,EAAA,CAAA,IAAAG,EAAA,YAAAH,CAAA,EAEAa,EAAAP,EAAA,WAAwB,CAAA,CAAA,SAAAC,EAAA,UAAAP,EAAA,UAAAQ,EAAA,GAAAC,CAAA,EAAAC,IAEpBC,EACE,MAAC,CAAA,GAAAF,EACK,aAAAD,EACQ,UAAAT,EAAA,CAAA,UAAAC,EAAA,EACsB,IAAAU,EAClC,SAAAH,CAEC,CAAA,CAIT,EAEAM,EAAA,YAAA,YACA,MAAAC,EAAA,OAAA,OAAAD,EAAA,CAAwC,KAAAR,EAChC,UAAAN,CAER,CAAA"}