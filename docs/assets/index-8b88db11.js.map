{"version":3,"file":"index-8b88db11.js","sources":["../../src/Avatar/AvatarGroup.tsx","../../src/Avatar/Avatar.tsx"],"sourcesContent":["import React, { ReactElement } from 'react'\nimport { twMerge } from 'tailwind-merge'\n\nimport { AvatarProps } from '../Avatar'\n\nexport type AvatarGroupProps = React.HTMLAttributes<HTMLDivElement> & {\n  children: ReactElement<AvatarProps>[]\n}\n\nconst AvatarGroup = React.forwardRef<HTMLDivElement, AvatarGroupProps>(\n  ({ children, className, ...props }, ref): JSX.Element => {\n    const classes = twMerge('avatar-group -space-x-6', className)\n\n    return (\n      <div\n        aria-label={`Group of ${children.length} avatar photos`}\n        {...props}\n        className={classes}\n        ref={ref}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nexport default AvatarGroup\n","import React from 'react'\nimport clsx from 'clsx'\nimport { twMerge } from 'tailwind-merge'\nimport { isSingleStringChild } from '../utils'\n\nimport AvatarGroup from './AvatarGroup'\n\nimport {\n  IComponentBaseProps,\n  ComponentColor,\n  ComponentShape,\n  ComponentSize,\n} from '../types'\n\nexport type AvatarProps = Omit<React.HTMLAttributes<HTMLDivElement>, 'color'> &\n  IComponentBaseProps & {\n    src?: string\n    letters?: string\n    size?: ComponentSize | number\n    shape?: ComponentShape\n    color?: Exclude<ComponentColor, 'ghost'>\n    border?: boolean\n    borderColor?: Exclude<ComponentColor, 'ghost'>\n    online?: boolean\n    offline?: boolean\n    innerClassName?: string\n    children?: React.ReactNode\n  }\n\nconst Avatar = React.forwardRef<HTMLDivElement, AvatarProps>(\n  (\n    {\n      size = 'md',\n      src,\n      letters,\n      shape,\n      color,\n      border,\n      borderColor,\n      online,\n      offline,\n      dataTheme,\n      className,\n      innerClassName,\n      children,\n      ...props\n    },\n    ref\n  ): JSX.Element => {\n    const containerClasses = twMerge(\n      'avatar',\n      className,\n      clsx({\n        online: online,\n        offline: offline,\n        placeholder: !src,\n      })\n    )\n\n    const imgClasses = clsx(innerClassName, {\n      'ring ring-offset-base-100 ring-offset-2': border,\n      'ring-accent': borderColor === 'accent',\n      'ring-error': borderColor === 'error',\n      'ring-info': borderColor === 'info',\n      'ring-neutral': borderColor === 'neutral',\n      'ring-primary': borderColor === 'primary',\n      'ring-secondary': borderColor === 'secondary',\n      'ring-success': borderColor === 'success',\n      'ring-warning': borderColor === 'warning',\n      'rounded-btn': shape === 'square',\n      'rounded-full': shape === 'circle',\n      'w-32 h-32': size === 'lg',\n      'w-24 h-24': size === 'md',\n      'w-14 h-14': size === 'sm',\n      'w-10 h-10': size === 'xs',\n    })\n\n    const placeholderClasses = clsx(innerClassName, {\n      'bg-neutral-focus': !color,\n      'text-neutral-content': !color || color === 'neutral',\n      'bg-accent': color === 'accent',\n      'bg-error': color === 'error',\n      'bg-info': color === 'info',\n      'bg-neutral': color === 'neutral',\n      'bg-primary': color === 'primary',\n      'bg-secondary': color === 'secondary',\n      'bg-success': color === 'success',\n      'bg-warning': color === 'warning',\n      'text-accent-content': color === 'accent',\n      'text-error-content': color === 'error',\n      'text-info-content': color === 'info',\n      'text-primary-content': color === 'primary',\n      'text-secondary-content': color === 'secondary',\n      'text-success-content': color === 'success',\n      'text-warning-content': color === 'warning',\n      'ring ring-offset-base-100 ring-offset-2': border,\n      'ring-accent': borderColor === 'accent',\n      'ring-error': borderColor === 'error',\n      'ring-info': borderColor === 'info',\n      'ring-neutral': borderColor === 'neutral',\n      'ring-primary': borderColor === 'primary',\n      'ring-secondary': borderColor === 'secondary',\n      'ring-success': borderColor === 'success',\n      'ring-warning': borderColor === 'warning',\n      'rounded-btn': shape === 'square',\n      'rounded-full': shape === 'circle',\n      'w-32 h-32 text-3xl': size === 'lg',\n      'w-24 h-24 text-xl': size === 'md',\n      'w-14 h-14': size === 'sm',\n      'w-10 h-10': size === 'xs',\n    })\n\n    const customImgDimension =\n      typeof size === 'number' ? { width: size, height: size } : {}\n\n    const renderAvatarContents = () => {\n      // Base case, if src is provided, render img\n      if (src) {\n        return (\n          <div className={imgClasses} style={customImgDimension}>\n            <img src={src} />\n          </div>\n        )\n      }\n      // Render a text avatar if letters are provided, or a single child that is a string\n      else if (letters || isSingleStringChild(children)) {\n        return (\n          <div className={placeholderClasses} style={customImgDimension}>\n            <span>{letters ? letters : children}</span>\n          </div>\n        )\n      }\n      // Render if a single, not string child was provided (allows for SVGs) and merges classes and styles\n      else if (React.Children.count(children) === 1) {\n        const firstChild = React.Children.only(children) as React.ReactElement\n        return React.cloneElement(firstChild, {\n          className: twMerge(imgClasses, firstChild.props.className),\n          style: { ...customImgDimension, ...firstChild.props.style },\n        })\n      }\n      // Render a wrapping div around all children if there is more than one child.\n      else {\n        return (\n          <div className={imgClasses} style={customImgDimension}>\n            {children}\n          </div>\n        )\n      }\n    }\n\n    return (\n      <div\n        aria-label=\"Avatar photo\"\n        {...props}\n        data-theme={dataTheme}\n        className={containerClasses}\n        ref={ref}\n      >\n        {renderAvatarContents()}\n      </div>\n    )\n  }\n)\n\nexport default Object.assign(Avatar, {\n  Group: AvatarGroup,\n})\n"],"names":["AvatarGroup","React","children","className","props","ref","classes","twMerge","jsx","AvatarGroup$1","Avatar","size","src","letters","shape","color","border","borderColor","online","offline","dataTheme","innerClassName","containerClasses","clsx","imgClasses","placeholderClasses","customImgDimension","isSingleStringChild","firstChild","Avatar$1"],"mappings":"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"}